{
  "version": 3,
  "sources": ["../lib/quarters.json", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["{\n\t\"1\": 1,\n\t\"jan\": 1,\n\t\"january\": 1,\n\t\"2\": 1,\n\t\"feb\": 1,\n\t\"february\": 1,\n\t\"3\": 1,\n\t\"mar\": 1,\n\t\"march\": 1,\n\t\"4\": 2,\n\t\"apr\": 2,\n\t\"april\": 2,\n\t\"5\": 2,\n\t\"may\": 2,\n\t\"6\": 2,\n\t\"jun\": 2,\n\t\"june\": 2,\n\t\"7\": 3,\n\t\"jul\": 3,\n\t\"july\": 3,\n\t\"8\": 3,\n\t\"aug\": 3,\n\t\"august\": 3,\n\t\"9\": 3,\n\t\"sep\": 3,\n\t\"september\": 3,\n\t\"10\": 4,\n\t\"oct\": 4,\n\t\"october\": 4,\n\t\"11\": 4,\n\t\"nov\": 4,\n\t\"november\": 4,\n\t\"12\": 4,\n\t\"dec\": 4,\n\t\"december\": 4\n}\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isDateObject = require( '@stdlib/assert-is-date-object' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar lowercase = require( '@stdlib/string-lowercase' );\nvar format = require( '@stdlib/string-format' );\nvar QUARTERS = require( './quarters.json' );\n\n\n// MAIN //\n\n/**\n* Returns the quarter of the year.\n*\n* @param {(integer|string|Date)} [month] - month (or `Date`)\n* @throws {TypeError} must provide either a string, integer, or `Date` object\n* @throws {Error} must provide a recognized month\n* @throws {RangeError} an integer month argument must be on the interval `[1,12]`\n* @returns {integer} quarter of the year\n*\n* @example\n* var q = quarterOfYear( new Date() );\n* // returns <number>\n*\n* @example\n* var q = quarterOfYear( 4 );\n* // returns 2\n*\n* @example\n* var q = quarterOfYear( 'June' );\n* // returns 2\n*/\nfunction quarterOfYear( month ) {\n\tvar mon;\n\tvar q;\n\tif ( arguments.length ) {\n\t\tif ( isDateObject( month ) ) {\n\t\t\tmon = month.getMonth() + 1; // zero-based\n\t\t} else if ( isString( month ) || isInteger( month ) ) {\n\t\t\tmon = month;\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide either a string, integer, or Date object. Value: `%s`.', month ) );\n\t\t}\n\t} else {\n\t\t// Note: cannot cache as application may cross over into a new year:\n\t\tmon = ( new Date() ).getMonth() + 1; // zero-based\n\t}\n\tif ( isInteger( mon ) && (mon < 1 || mon > 12) ) {\n\t\tthrow new RangeError( format( 'invalid argument. An integer month value must be on the interval: [1, 12]. Value: `%s`.', mon ) );\n\t}\n\tmon = lowercase( mon.toString() );\n\tq = QUARTERS[ mon ];\n\tif ( q === void 0 ) {\n\t\tthrow new Error( format( 'invalid argument. Must provide a recognized month. Value: `%s`.', month ) );\n\t}\n\treturn q;\n}\n\n\n// EXPORTS //\n\nmodule.exports = quarterOfYear;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the quarter of the year.\n*\n* @module @stdlib/time-quarter-of-year\n*\n* @example\n* var quarterOfYear = require( '@stdlib/time-quarter-of-year' );\n*\n* var q = quarterOfYear( new Date() );\n* // returns <number>\n*\n* q = quarterOfYear( 4 );\n* // returns 2\n*\n* q = quarterOfYear( 'June' );\n* // returns 2\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,CAAAA,EAAA,SACC,IAAK,EACL,IAAO,EACP,QAAW,EACX,IAAK,EACL,IAAO,EACP,SAAY,EACZ,IAAK,EACL,IAAO,EACP,MAAS,EACT,IAAK,EACL,IAAO,EACP,MAAS,EACT,IAAK,EACL,IAAO,EACP,IAAK,EACL,IAAO,EACP,KAAQ,EACR,IAAK,EACL,IAAO,EACP,KAAQ,EACR,IAAK,EACL,IAAO,EACP,OAAU,EACV,IAAK,EACL,IAAO,EACP,UAAa,EACb,KAAM,EACN,IAAO,EACP,QAAW,EACX,KAAM,EACN,IAAO,EACP,SAAY,EACZ,KAAM,EACN,IAAO,EACP,SAAY,CACb,ICpCA,IAAAC,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAe,QAAS,+BAAgC,EACxDC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAY,QAAS,0BAA2B,EAChDC,EAAS,QAAS,uBAAwB,EAC1CC,EAAW,IA0Bf,SAASC,EAAeC,EAAQ,CAC/B,IAAIC,EACAC,EACJ,GAAK,UAAU,OACd,GAAKT,EAAcO,CAAM,EACxBC,EAAMD,EAAM,SAAS,EAAI,UACdN,EAAUM,CAAM,GAAKL,EAAWK,CAAM,EACjDC,EAAMD,MAEN,OAAM,IAAI,UAAWH,EAAQ,wFAAyFG,CAAM,CAAE,OAI/HC,EAAQ,IAAI,KAAK,EAAI,SAAS,EAAI,EAEnC,GAAKN,EAAWM,CAAI,IAAMA,EAAM,GAAKA,EAAM,IAC1C,MAAM,IAAI,WAAYJ,EAAQ,0FAA2FI,CAAI,CAAE,EAIhI,GAFAA,EAAML,EAAWK,EAAI,SAAS,CAAE,EAChCC,EAAIJ,EAAUG,CAAI,EACbC,IAAM,OACV,MAAM,IAAI,MAAOL,EAAQ,kEAAmEG,CAAM,CAAE,EAErG,OAAOE,CACR,CAKAV,EAAO,QAAUO,IC1CjB,IAAII,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_quarters", "__commonJSMin", "exports", "module", "require_main", "__commonJSMin", "exports", "module", "isDateObject", "isString", "isInteger", "lowercase", "format", "QUARTERS", "quarterOfYear", "month", "mon", "q", "main"]
}
